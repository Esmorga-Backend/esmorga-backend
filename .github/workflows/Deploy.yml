name: Deploy
run-name: ${{ github.actor }} is deploying release to ${{ inputs.environment }} Env
  ðŸš€
on:

  workflow_dispatch:
    inputs:
      environment:
        description: DEPLOY ENV
        required: true
        default: PROD

      release_num:
        description: Release Number
        required: true
        default: '0.0.0'

  workflow_call:
    inputs:
      environment:
        description: DEPLOY ENV
        required: true
        type: string
        default: QA
jobs:
  Deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create .env
      run: |
        echo "APP_PORT=${{vars.APP_PORT}}" >> .env 
        echo "MONGODB_URI=${{secrets.MONGODB_URI}}" >> .env 
        echo "NODE_ENV=${{vars.NODE_ENV}}" >> .env 
        echo "JWT_SECRET=${{secrets.JWT_SECRET}}" >> .env 
        echo "JWT_REFRESH_SECRET=${{secrets.JWT_REFRESH_SECRET}}" >> .env 
        echo "ACCESS_TOKEN_TTL=${{vars.ACCESS_TOKEN_TTL}}" >> .env 
        echo "MAX_PAIR_OF_TOKEN=${{vars.MAX_PAIR_OF_TOKEN}}" >> .env 
        echo "EMAIL_USER=${{vars.EMAIL_USER}}" >> .env 
        echo "EMAIL_PASS=${{secrets.EMAIL_PASS}}" >> .env 
        echo "APP_LINK=${{vars.APP_LINK}}" >> .env 
        echo "LOGIN_ATTEMPTS_TTL=${{vars.LOGIN_ATTEMPTS_TTL}}" >> .env 
        echo "MAX_LOGIN_ATTEMPTS=${{vars.MAX_LOGIN_ATTEMPTS}}" >> .env 
        echo "DNS_NAME=${{vars.DNS_NAME}}" >> .env 
    - name: Set up Python "pypy3.9"
      uses: actions/setup-python@v5
      with:
        python-version: pypy3.9

    - name: Install dependencies And Deploy PROD
      shell: bash
      if: ${{ inputs.environment == 'PROD' }}
      run: |
        python -m pip install --upgrade pip paramiko 
        python .github/workflows/scripts/DeployToEnv.py api.esmorgaevents.com ${{vars.SERVICE}} ${{vars.SERVER_PATH}} release/esmorga-${{ inputs.release_num }} ${{secrets.SSHRSA}}

    - name: Install dependencies And Deploy QA
      shell: bash
      if: ${{ inputs.environment == 'QA' }}
      run: |
        python -m pip install --upgrade pip paramiko 
        python .github/workflows/scripts/DeployToEnv.py qa.api.esmorgaevents.com ${{vars.SERVICE}} ${{vars.SERVER_PATH}} $GITHUB_REF ${{secrets.SSHRSA}}

    - name: Remove .env
      run: |
        rm .env



